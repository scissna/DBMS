EXPERIMENT NO :20
NoSQL â€“ AGGREGATE FUNCTIONS AND REGULAR EXPRESSIONS


1.Write a MongoDB query to sort customer details in ascending order of their name.
==================================================================================

> db.customer.find().sort({Name:1})
{ "_id" : ObjectId("62a82072c86c3c3c26b56f5e"), "Name" : "anju", "city" : "ekm", "phno" : "907557522", "age" : 10 }
{ "_id" : ObjectId("62a8208ec86c3c3c26b56f5f"), "Name" : "midhun", "city" : "eng", "phno" : "907557525", "age" : 25 }
{ "_id" : ObjectId("62a8203fc86c3c3c26b56f5c"), "Name" : "scissmo", "city" : "pkd", "phno" : "9074567522", "age" : 21 }
{ "_id" : ObjectId("62a82010c86c3c3c26b56f5b"), "Name" : "scissna", "city" : "thrissur", "phno" : "9074567512", "age" : 20 }
> 



2.Write a MongoDB query to count number of customers in each city.
==================================================================================

> db.customer.aggregate([{$group:{_id:"$city",total:{$sum:1}}}])
{ "_id" : "eng", "total" : 1 }
{ "_id" : "ekm", "total" : 1 }
{ "_id" : "thrissur", "total" : 1 }
{ "_id" : "pkd", "total" : 1 }







3.Write a MongoDB query to find minimum and maximum age in each city.
==================================================================================
db.customer.aggregate([{$group:{_id:"$city",max_age:{$max:"$age"},min_age:{$min:"$age"}}}])
{ "_id" : "eng", "max_age" : 25, "min_age" : 25 }
{ "_id" : "ekm", "max_age" : 10, "min_age" : 10 }
{ "_id" : "thrissur", "max_age" : 20, "min_age" : 20 }
{ "_id" : "pkd", "max_age" : 21, "min_age" : 21 }
> 




